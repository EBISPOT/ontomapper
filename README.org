#+TITLE: Ontomapper utility
#+AUTHOR: Warren Read
#+STARTUP: showall indent
#+OPTIONS: num:nil toc:nil


Ontology mapper command-line utility, in Python

** Overview

This Unix command-line utility enables you to take the GWAS spreadsheet as input
and process it with OxO (using either the public or internal EBI web service, as
you wish, depending on your access level) to enrich it with terms from
ontologies other than the default (EFO). You can optionally include other
ontologies in extra rows or extra columns, and can further choose whether to use
one column per output ontology, if you want to retrieve matching terms from
multiple ontologies other than EFO. You may also choose whether to retain or
dispense with the original EFO terms in the output.

** Dependencies

Python 3.6 and above. Libraries imported should come as standard with a Python
3.6 distribution; if not, your virtual environment may need to reflect this.
Imports are at the top of ~ontomapper.py~.

** Installation

Just ~git clone~ the project: you will be able to execute the python script from
the top-level working directory.

** Execution

The main script is ~ontomapper.py~: simply execute this with any necessary
switches as described below, and redirect standard output. Informational
progress reports get printed to standard error (usually the console).

There are several switches available: most have a default value set, either in
the executable itself, or the config file, ~ontomapper.ini~; the four main
options that you may wish to specify explicitly are as follows (although even
these have default values):

1. ~--oxo pub | --oxo dev~: whether to use the public or internal EBI version of
   the OxO web service;
2. ~--target ncit mesh doid~ /(example list)/: new ontology, or ontologies, to
   include in the output spreadsheet---supply the switch itself once only,
   followed by a single ontology or a space-separated list;
3. ~--format [ in-situ | uni-row | multi-row | uni-column | multi-column ]~:
   choice of terms from new ontologies are stored in the output spreadsheet;
4. ~--keep | --no-keep~: whether to retain the original EFO terms in the output
   spreadsheet.

Single-letter short-hands for all the above switches are also available.

*** Example

To obtain equivalent terms from both MeSH and the Disease Ontology, using the
public web service, reserving a new column for each new ontology and dispensing
with the original EFO terms, you can enter the following command (assuming you
have execute privilege on ~ontomapper.py~), redirecting output to a new
tab-separated-variable (spreadsheet) file:

~./ontomapper.py --oxo pub --target mesh doid --format multi-column --no-keep >
gwas_new.tsv~
